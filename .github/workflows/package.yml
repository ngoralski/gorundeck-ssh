name: Build the artefact
on:
  push:
    tags:
      - 'v*'
jobs:
  build:
    name: Build ${{matrix.go}}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        go: [
          "1.18"
        ]
    steps:
      - name: Checkout branch
        uses: actions/checkout@v3

      - name: Setup go
        uses: actions/setup-go@v3
        with:
          go-version: ${{matrix.go}}

      - name: Get Module dependencies
        run: |
          go mod download

      - name: Build
        run: |
          go build -o gorundeck-ssh cmd/gorundeck-ssh/main.go

      - name: Package the artefact
        run: |
          pkg_version=$(echo $GITHUB_REF_NAME | cut -d'v' -f2)
          cp -rp package_ressources gorundeck-ssh-${pkg_version}-plugin
          cp -rp gorundeck-ssh gorundeck-ssh-${pkg_version}-plugin/contents
          ls -lart .
          ls -lartR gorundeck-ssh-${pkg_version}-plugin/
          zip -r gorundeck-ssh-${pkg_version}-plugin.zip gorundeck-ssh-${pkg_version}-plugin
          
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./gorundeck-ssh-${pkg_version}-plugin.zip
          asset_name: gorundeck-ssh-${pkg_version}-plugin.zip
          asset_content_type: application/zip